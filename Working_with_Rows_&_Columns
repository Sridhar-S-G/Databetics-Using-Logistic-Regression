import pandas as pd

#specifying number of rows in the read_csv function reads only first n specific rows from the csv file 
df=pd.read_csv('https://raw.githubusercontent.com/Sridhar-S-G/Databetics-Using-Logistic-Regression/master/diabetes.csv',nrows=5)
print(df)

df=pd.read_csv('https://raw.githubusercontent.com/Sridhar-S-G/Databetics-Using-Logistic-Regression/master/diabetes.csv')
print(df.ix[405]) #Specifying a number inside ix displays only that specific row, here only row 405 is displayed
print(df.ix[200:210]) #Specifying the range inside ix displays the range of rows, here only rows from 200 to 210 is displayed

df=pd.read_csv('https://raw.githubusercontent.com/Sridhar-S-G/Databetics-Using-Logistic-Regression/master/diabetes.csv')
print(df.tail(35)) #Prints last n  number of rows defined in the function, here last  35 rows are printed

'''Note: Execute different blocks to see individual o/p 
or execute whole block to see the difference in each method'''

df=pd.read_csv('https://raw.githubusercontent.com/Sridhar-S-G/Databetics-Using-Logistic-Regression/master/diabetes.csv')
print(df.loc[0,:])  #The loc[r,c] where r is Row and c is Column, here the code will print 1st row as r=0 and all columns
print(df.loc[0:3,:]) #Here range of Rows will be displayed from 0 to 3 and all columns
print(df.loc[df.Pregnancies==1]) #Here Rows having pregnancies = 1 are displayed with their respective columns
print(df.loc[0:3,'Pregnancies':'BloodPressure']) #Here row from 0 to 3 will be displayed and columns from Pregnancies to BloodPressure will be displyed
print(df.loc[0:2,['Pregnancies','BloodPressure']]) #Here row from 0 to 3 will be displayed and columns Pregnancies and BloodPressure will be displayed

df=pd.read_csv('https://raw.githubusercontent.com/Sridhar-S-G/Databetics-Using-Logistic-Regression/master/diabetes.csv')
print(df['Pregnancies'].head())

''' By specifying column name in the [] you can print the specified column,
for example in above program the column name 'Pregnancies' is specified inside df['Pregnancies']
so the Pregnancies column alone is printed'''

#Sorting Columns
import pandas as pd
data=pd.read_csv('https://raw.githubusercontent.com/Sridhar-S-G/Databetics-Using-Logistic-Regression/master/diabetes.csv')
df=pd.DataFrame(data)

df2=df
print(df2.head()) #printing head of dataframe(df) without sorting

df2=df2.sort_values('Pregnancies')
print(df2.head()) #printing df 'Pregnancies' column

df3=df2.sort_values('Glucose')
print(df3.head()) #printing head of df 'Glucose' column

df4=df2.sort_values('BloodPressure')
print(df4.head()) #printing head of df 'BloodPressure' column

df5=df2.sort_values('SkinThickness')
print(df5.head()) #printing head of df 'SkinThickness' column

df6=df2.sort_values('Insulin')
print(df6.head()) #printing head of df 'Insulin' column

df7=df2.sort_values('BMI')
print(df7.head()) #printing head of df 'BMI' column

df8=df2.sort_values('DiabetesPedigreeFunction')
print(df8.head()) #printing head of df 'DiabetesPedigreeFunction' column

df9=df2.sort_values('Age')
print(df9.head()) #printing head of df 'Age' column

df10=df2.sort_values('Outcome')
print(df10.head()) #printing head of df 'Outcome' column

'''Printing a row(i.e 450) of different DataFrames(df,df2,df3,df4,df5,df6,df7,df8,df9,df10) 
to check integrity after sorting different column'''

print(df.ix[450]) 
print(df2.ix[450])
print(df3.ix[450])
print(df4.ix[450])
print(df5.ix[450])
print(df6.ix[450])
print(df7.ix[450])
print(df8.ix[450])
print(df9.ix[450])
print(df10.ix[450])

'''Its found data integrity is maintained is maintained

In this way you can sort different columns of your DataFrame

Note: sorting the data in one column retains its relative together so data is not misplaced''' 


